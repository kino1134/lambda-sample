plugins {
    id 'java-library'
    id 'org.springframework.boot' version '2.0.3.RELEASE'
}

sourceCompatibility = targetCompatibility = '1.8'

repositories {
    jcenter()
}

dependencies {
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.0'
    implementation 'com.amazonaws:aws-lambda-java-events:2.2.6'

    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    implementation 'org.springframework.boot:spring-boot-starter-validation:2.0.3.RELEASE'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    //implementation 'org.springframework.boot:spring-boot-starter-web:2.0.3.RELEASE'
    //implementation('com.amazonaws.serverless:aws-serverless-java-container-spring:1.3.1') {
    //    exclude group: "org.slf4j", module: "slf4j-api"
    //}
    //runtime 'org.slf4j:jul-to-slf4j:1.7.12'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.23.4'
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    //into('lib') {
    //    from(configurations.compileClasspath) {
    //        //exclude 'tomcat-embed-*'
    //    }
    //}
}
build.dependsOn buildZip

task copyLib(type: Sync) {
    from(configurations.runtimeClasspath) {
        //exclude 'tomcat-embed-*'
    }
    into('build/external/java/lib')
}
buildZip.dependsOn copyLib
